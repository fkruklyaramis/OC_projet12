# Generated by Django 5.2.5 on 2025-08-11 09:00

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('COMMERCIAL', 'Commercial'), ('SUPPORT', 'Support'), ('GESTION', 'Gestion')], max_length=10, verbose_name='Rôle')),
                ('employee_number', models.CharField(max_length=10, unique=True, verbose_name="Numéro d'employé")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=250, verbose_name="Nom de l'entreprise")),
                ('first_name', models.CharField(max_length=25, verbose_name='Prénom')),
                ('last_name', models.CharField(max_length=25, verbose_name='Nom')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('phone', models.CharField(max_length=17, validators=[django.core.validators.RegexValidator(message="Le numéro de téléphone doit être au format: '+999999999'. 15 chiffres maximum.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Téléphone')),
                ('mobile', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message="Le numéro de téléphone doit être au format: '+999999999'. 15 chiffres maximum.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Mobile')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('sales_contact', models.ForeignKey(limit_choices_to={'role': 'COMMERCIAL'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='clients', to=settings.AUTH_USER_MODEL, verbose_name='Contact commercial')),
            ],
            options={
                'verbose_name': 'Client',
                'verbose_name_plural': 'Clients',
            },
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Montant total')),
                ('amount_due', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Montant restant à payer')),
                ('is_signed', models.BooleanField(default=False, verbose_name='Contrat signé')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contracts', to='crm.client', verbose_name='Client')),
                ('sales_contact', models.ForeignKey(limit_choices_to={'role': 'COMMERCIAL'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contracts', to=settings.AUTH_USER_MODEL, verbose_name='Contact commercial')),
            ],
            options={
                'verbose_name': 'Contrat',
                'verbose_name_plural': 'Contrats',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name="Nom de l'événement")),
                ('event_date_start', models.DateTimeField(verbose_name='Date de début')),
                ('event_date_end', models.DateTimeField(verbose_name='Date de fin')),
                ('location', models.TextField(verbose_name='Lieu')),
                ('attendees', models.PositiveIntegerField(verbose_name='Nombre de participants')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('contract', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='event', to='crm.contract', verbose_name='Contrat')),
                ('support_contact', models.ForeignKey(blank=True, limit_choices_to={'role': 'SUPPORT'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='events', to=settings.AUTH_USER_MODEL, verbose_name='Contact support')),
            ],
            options={
                'verbose_name': 'Événement',
                'verbose_name_plural': 'Événements',
            },
        ),
    ]
